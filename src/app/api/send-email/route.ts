import { NextResponse } from "next/server";
import Mailjet from "node-mailjet";

export async function POST(req: Request) {
  try {
    const { name, email, message, token } = await req.json();
    const secret = process.env.RECAPTCHA_SECRET_KEY!;

    const verifyRes = await fetch(
      "https://www.google.com/recaptcha/api/siteverify",
      {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: `secret=${secret}&response=${token}`,
      }
    );
    const captcha = await verifyRes.json();
    console.log("Captcha Verification:", captcha);
    // if (!captcha.success) {
    //   return NextResponse.json({ success: false, error: "‚ùå Captcha verification failed" }, { status: 400 });
    // }
    console.log("Captcha passed, sending email...");
    console.log({ name, email, message });
    console.log("Env Variables:", {
      MAILJET_API_KEY: process.env.MAILJET_API_KEY,
      MAILJET_SECRET_KEY: process.env.MAILJET_SECRET_KEY,
      MAILJET_SENDER: process.env.MAILJET_SENDER,
      MAILJET_RECEIVER: process.env.MAILJET_RECEIVER,
    });
    try {
      const mailjet = Mailjet.apiConnect(
        process.env.MAILJET_API_KEY!,
        process.env.MAILJET_SECRET_KEY!
      );
      await mailjet.post("send", { version: "v3.1" }).request({
        Messages: [
          {
            From: {
              Email: process.env.MAILJET_SENDER!,
              Name: "HHe.by",
            },
            To: [
              {
                Email: process.env.MAILJET_RECEIVER!,
                Name: "Herbert He",
              },
            ],
            Subject: "üì© New Contact Form Submission",
            TextPart: `From: ${name} (${email})\n\n${message}`,
            HTMLPart: `
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f9fafb;
        margin: 0;
        padding: 0;
      }
      .container {
        max-width: 600px;
        margin: 20px auto;
        background: #ffffff;
        border-radius: 8px;
        padding: 24px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.08);
      }
      .header {
        border-bottom: 2px solid #e5e7eb;
        margin-bottom: 16px;
        padding-bottom: 8px;
      }
      .header h2 {
        color: #111827;
        margin: 0;
      }
      .field {
        margin: 12px 0;
      }
      .label {
        font-weight: bold;
        color: #374151;
        display: block;
        margin-bottom: 4px;
      }
      .value {
        color: #1f2937;
      }
      .footer {
        margin-top: 24px;
        padding-top: 12px;
        border-top: 1px solid #e5e7eb;
        font-size: 13px;
        color: #6b7280;
        text-align: center;
      }
      .highlight {
        color: #e11d48;
        font-weight: bold;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="header">
        <h2>üì© New Contact Form Submission</h2>
        <p>You have received a new inquiry from your website.</p>
      </div>

      <div class="field">
        <span class="label">üë§ Name</span>
        <span class="value">${name}</span>
      </div>

      <div class="field">
        <span class="label">üìß Email</span>
        <span class="value"><a href="mailto:${email}">${email}</a></span>
      </div>

      <div class="field">
        <span class="label">üí¨ Message</span>
        <span class="value">${message}</span>
      </div>

      <div class="footer">
        This email was automatically generated by 
        <span class="highlight">VanLearn International Education</span>.<br/>
        Please reply directly to the sender if needed.
      </div>
    </div>
  </body>
</html>`,
          },
        ],
      });
    } catch (err) {
      console.error("Mailjet Error:", err);
      return NextResponse.json(
        { success: false, error: "‚ùå Failed to send email" },
        { status: 500 }
      );
    }

    return NextResponse.json({ success: true });
  } catch {
    return NextResponse.json(
      { success: false, error: "‚ùå Verification failed" },
      { status: 500 }
    );
  }
}
